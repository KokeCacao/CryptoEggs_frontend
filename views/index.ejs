<!DOCTYPE html>
<html lang="en">
  <head>
    <script
      src="https://cdn.ethers.io/lib/ethers-5.2.umd.min.js"
      type="application/javascript"
    ></script>
    <link rel="stylesheet" href="https://kokecacao.me/static/./css/BrowneUI.css">
    <script>
      const contractAddress = "<%= contractAddress %>";
      const contractJson = <%- contractJson %>;
      let provider;
      let signer;
      let metamask = true;

      function displayableHex(a) {
        let str = `${a}`;
        return `${str.substring(0, 4)}...${str.slice(-4)}`;
      }

      async function connectToMetamaskRPC() {
        // for testing only
        provider = new ethers.providers.Web3Provider(window.ethereum, "any");
        // Prompt user for account connections
        await provider.send("eth_requestAccounts", []);
        signer = provider.getSigner();
        const acc = await signer.getAddress();
        console.log("Account:", acc);
        document.getElementById("account").innerHTML = `Your Account: ${acc}`;
      }

      async function connectToRemoteRPC(url="http://yukisa.wifi.local.cmu.edu:8545") {
        provider = new ethers.providers.JsonRpcProvider(url);
        // Prompt user for account connections
        signer = provider.getSigner();
        const acc = await signer.getAddress();
        console.log("Account:", acc);
        document.getElementById("account").innerHTML = `Your Account: ${acc}`;
      }

      async function connectToRPC(metamask) {
        if (metamask) connectToMetamaskRPC();
        else connectToRemoteRPC();
      }

      async function getEggs() {
        if (window.ethereum !== undefined) {
          if (signer === undefined) await connectToRPC(metamask);
          const contract = new ethers.Contract(contractAddress, contractJson.abi, provider);
          try {
            const transaction = await contract.getOwnerEgg(signer.getAddress());
            console.log(transaction);
            if (transaction.eq(ethers.BigNumber.from(0))) {
              document.getElementById("display").style.opacity = "0.0";
              document.getElementById("announcement").innerHTML = `You don't have any egg yet!`;
            } else {
              document.getElementById("display").style.opacity = "1.0";
              document.getElementById("announcement").innerHTML = `Your EggId: ${displayableHex(transaction)}`;
            }
            // const decimals = 0;
            // console.log(ethers.utils.formatUnits(transaction, decimals));
          } catch (error) {
            console.log(error);
            document.getElementById("announcement").innerHTML = error;
          }
        }
      }

      async function claimEgg() {
        if (window.ethereum !== undefined) {
          if (signer === undefined) await connectToRPC(metamask);
          const contract = new ethers.Contract(contractAddress, contractJson.abi, signer);
          try {
            const transaction = await contract.claimEgg();
            await transaction.wait();
            await getEggs();
            document.getElementById("announcement").innerHTML = "Claim Egg Successful!";
          } catch (error) {
            if (error.code === 4001) {
              console.log("User denied signature");
              document.getElementById("announcement").innerHTML = "User denied signature";
            } else {
              console.log(error);
              document.getElementById("announcement").innerHTML = error;
            }
          }
        }
      }
    </script>
  </head>
  <body onload="">
    <div class="container">
      <div align="center">
        <h1><%= title %></h1>
        <p>Breed your own Cryptomon â€” [2021/03/18, Alpha] <span class="typing">_</span></p>
      </div>

      <div align="center">
        <img id="display" style="opacity:0.1" src="https://lh3.googleusercontent.com/IFXvIHR35yZZH9YwbNnbhLr4X_eQCzVaCH9Xm1ExmJtoixkXVQwVGpcvZFub717WVTrVRyFq1mBe5fVsHKdQrZFayP0B3ox8scXQSu0=w600">
        <!-- <a class="btn" onclick="metamask = false;">setDebugMode</a> -->
      </div>
      <div align="center">
        <a class="btn" onclick="connectToRPC(metamask)">connectToMetamask</a>
        <a class="btn" onclick="getEggs()">getEggs</a>
        <a class="btn" onclick="claimEgg()">claimEgg</a>
      </div>
      <div align="center">
        <p id="account">Your are not logged in</p>
        <p id="announcement"></p>

        <figure>
          <img id="display" data-zoom-image style="opacity:1; max-width: 100%;" src="./static/tutorial_00.png">
        </figure>
        <figure>
          <img id="display" data-zoom-image style="opacity:1; max-width: 100%;" src="./static/tutorial_01.png">
        </figure>
      </div>
      
    </div>
  </body>
</html>